package dependencygraph.mapping;

import java.io.IOException;
import java.sql.SQLException;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;

public class IntegratedDOSGraphNodeController{
	public static final String FXML_FILE_DIR_STRING = "/dependencygraph/mapping/IntegratedDOSGraphNode.fxml";
	
	/////////////////////////////
	private IntegratedDOSGraphNodeManager manager;
	
	void setManager(IntegratedDOSGraphNodeManager manager) {
		this.manager = manager;
		this.dagNodeInforLabel.setText(this.manager.getHostIntegratedDOSGraphViewerManager().getDagNodeInforStringFunction().apply(this.manager.getNode()));
	}
	
	/**
	 * @return the manager
	 */
	public IntegratedDOSGraphNodeManager getManager() {
		return manager;
	}

	
	public Pane getRootNodeContainer() {
		return this.dagNodeRootStackPane;
	}
	
	////////////////
	private Button createMappingButton;
	/**
	 * 1. add the create mapping button
	 * 2. set up the event listener
	 * 
	 * @param inSolutionSet
	 */
	void setInSolutionSet(boolean inSolutionSet) {
		if(inSolutionSet) {
			this.createMappingButton = new Button("create Mapping");
			this.nodeContentVBox.getChildren().add(this.createMappingButton);
			
			this.createMappingButton.setOnAction(e->{
//				Stage stage = new Stage();
//				Scene scene = 
//						new Scene(
//								this.getManager().getHostIntegratedDOSGraphViewerManager().
//								getSolutionSetNodeMappingBuilderWindowManagerMap().get(this.getManager().getNode()).
//								getController().getRootNodeContainer()
//								);
//				
//				stage.setScene(scene);
//				
//				stage.showAndWait();
				try {
					//this implementation is sketchy
					///the reason to do this is to make sure if modifiable is false ...
					this.getManager().getHostIntegratedDOSGraphViewerManager().setModifiable(this.getManager().isModifiable());
					
					this.getManager().getHostIntegratedDOSGraphViewerManager()
					.getSolutionSetNodeMetadataMappingBuilderMap().get(this.getManager().getNode())
					.getIntegrativeUIController().showAndWait(this.dagNodeInforLabel.getScene().getWindow(), "test");
					
				} catch (SQLException | IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			});
		}else {
			//do nothing
		}
	}
	
	////////////////////
	@FXML
	public void initialize() {
		
	}
	
	@FXML
	private StackPane dagNodeRootStackPane;
	@FXML
	private VBox nodeContentVBox;
	@FXML
	private Label dagNodeInforLabel;
	@FXML
	private Button viewNodeDetailsButton;

	// Event Listener on Button[#viewNodeDetailsButton].onAction
	@FXML
	public void viewNodeDetailsButtonOnAction(ActionEvent event) {
		// TODO Autogenerated
	}
}
